#!/bin/bash
# Copyright 2018-2020 Marco Fontani <MFONTANI@cpan.org>
#
# Redistribution and use in source and binary forms, with or without
# modification, are permitted provided that the following conditions are met:
#
# 1. Redistributions of source code must retain the above copyright notice,
#    this list of conditions and the following disclaimer.
#
# 2. Redistributions in binary form must reproduce the above copyright notice,
#    this list of conditions and the following disclaimer in the documentation
#    and/or other materials provided with the distribution.
#
# 3. Neither the name of the copyright holder nor the names of its contributors
#    may be used to endorse or promote products derived from this software
#    without specific prior written permission.
#
# THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
# AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
# IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
# ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE
# LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
# CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
# SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
# INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
# CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
# ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
# POSSIBILITY OF SUCH DAMAGE.

# README: xargso
#
# An easy-to-use replacement for "xargs -o" for xargs which don't have it, and
# need the well-known "shell hack" to perform the same operation.
#
#     -o, --open-tty
#       Reopen stdin as /dev/tty in the child process before executing the command.  This is useful if you want xargs to run an interactive application.
#
# If you need to pass options to xargs, provide them _first_, and separate them
# from the rest via `--`. Only options until the _first_ `--` delimiter are
# passed to xargs; the rest are for the command to run
#
# Usage:
#
# - `ls | xargso vim -o` (don't do this! use null terminators!)
# - `printf 'foo\0bar\0baz' | xargso -0 -- echo`

# Separate "xargs" parameters from script parameters "at" the _first_ double
# dash.
xargsargs=()
args=()
founddoubledash=
for v in "$@"; do
    if [[ -z "$founddoubledash" ]]; then
        if [[ "$v" == "--" ]]; then
            # Only the *first* double dash should count as separator between xargs
            # and command parameters. Any double dash thereafter should be the
            # command parameter's
            founddoubledash=1
            continue
        fi
        xargsargs+=("$v")
    else
        args+=("$v")
    fi
done

# No double dash found means all args are to script, not xargs
if [[ -z "$founddoubledash" ]]; then
    args=("$@")
    xargsargs=()
fi

# shellcheck disable=SC2016
xargs "${xargsargs[@]}" bash -c '"$0" "$@" </dev/tty' "${args[@]}"
